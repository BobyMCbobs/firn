#+BEGIN_QUOTE
Static site generator using org-mode.
#+END_QUOTE

* What's this?

Firn generates a website from org-mode files. Firn's original intention was
to support the building of a flat file wiki, but it can also handle nested content.

Currently, running the =firn= binary on a directory of org files performs the following:

- Reads all .org files in the directory recursively.
- Parses org-files into data structures with [[https://github.com/PoiScript/orgize][Orgize.]]
- Collects all file links and logbooks across all files.
- Passes files through a template system with Hiccup, and renders to HTML.

* TODO Usage

* TODO Assumptions / Limitations

- the content _directory name_ (ex: "my_wiki") should not exist anywhere else in
  the path to a file in the wiki. (TODO: this might not be a problem anymore.)
  - for example, this is bad: =/development/my_wiki/some_more_dirs/my_wiki/file_1.org=
  - Unlikely that user's will have this, but it's currently a limitation nonetheless.
- Org mode links should be set to relative. You can probably do this with
  dir-locals and setting [[https://emacs.stackexchange.com/questions/32601/how-can-i-get-with-org-store-link-relative-path-instead-of-absolute][org-link-file-path-type]] to =relative=. Read [[file:docs/setup.org][setup]] for
  more details.

* Developing

Prerequisites:

- Download [[https://www.graalvm.org/downloads/][GraalVM]] and set `GRAALVM_HOME`.
-  Use `gu` to install the `native-image` executable.
- Install [[https://github.com/technomancy/leiningen][lein]]
- Install [[https://doc.rust-lang.org/cargo/getting-started/installation.html][cargo]] (we use 1.41.1)

** Building

This creates a single binary called =firn=.

#+BEGIN_SRC sh
git clone git@github.com:theiceshelf/firn.git
cd firn
# compile Rust, Clojure and the GraalVM Native Image.
bin/script/compile
#+END_SRC

** Developing [0%]
*** TODO - set up dev workflow that uses bin/parser
*** TODO Document setting up the repl / compiling test org files.
* Thank-you's

- Thank you to [[https://github.com/borkdude][@borkdude]] for building some awesome libraries ([[https://github.com/borkdude/sci][sci]] is used in
  firn to evaluate layouts) and for answering questions about compiling with
  GraalVM /and/ for figuring out how to compile [[https://github.com/borkdude/clojure-rust-graalvm][rust and clojure together]].
- PoiScript's org-mode [[https://github.com/PoiScript/orgize][parser]].
